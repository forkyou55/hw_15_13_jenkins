plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

repositories {
    mavenCentral()
}

def slf4jVersion = '2.0.5',
    junitVersion = "5.9.0",
    selenideVersion = '6.10.1',
    fakerVersion = "1.0.2",
    allureVersion = '2.20.0'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
test {
    useJUnitPlatform()
}

task property_test(type: Test){
    useJUnitPlatform{
        includeTags("property_test")
    }
}

task many_properties_test(type: Test){
    useJUnitPlatform{
        includeTags("many_properties_test")
    }
}

task hello(type: Test){
    useJUnitPlatform{
        includeTags("hello")
    }
}